Lecture 1:
Following users in MERN Social::
--In MERN Social, users will be able to follow each other. Each user will have a list of
followers and a list of people they follow and also see a list of users they can follow

Following and unfollowing:
--In order to keep track of which user is following which other users, we will have to
maintain two lists for each user. When one user follows or unfollows another user, we
will update one's following list and the other's followers list.

Updating the user model:
To store the list of following and followers in the database, we will need to
update the user model with two arrays of user references,

--These references will point to the users in the collection being followed by or
following the given user.

Lecture 2:
Adding APIs to follow and unfollow::
--When a user follows or unfollows another user from the view, both users' records in
the database will be updated in response to the follow or unfollow requests.

--The addFollowing controller method in the user controller will update the
following array for the current user by pushing the followed user's reference into
the array

Lecture 3:
Accessing the follow and unfollow APIs in views::
--update the api-user.js file with follow and unfollow methodds

Lecture 4:
Follow and unfollow buttons::
---The button that will allow a user to follow or unfollow another user will appear
conditionally, depending on whether the user is already followed or not by the
current user,

The FollowProfileButton component::
---We will create a separate component for the follow button called
FollowProfileButton, wch will show the folow and unfollow btn depending on whether the current user is already
a followe of the user in the profile

--When FollowProfileButton is added to the profile, the following value will be
determined and sent from the Profile component as a prop to
FollowProfileButton, along with the click handler that takes the specific follow
or unfollow fetch API to be called as a parameter

Updating the Profile component::
--In the Profile view, FollowProfileButton should only be shown when the user
views the profile of other users,
--In the Profile component, after the user data is successfully fetched in useEffect,
we will check whether the signed-in user is already following the user in the profile
or not and set the following value to the respective state, as shown in the following
code

Lecture 5:
Listing followings and followers::
---In order to give users easy access to the users they are following and the users who
are following them on MERN Social, we will add these lists to their profile views.
---The details of the users referenced in the following and followers lists are already
in the user object that is fetched using the read API when the profile is loaded.

--we will create FolloeGrid

--Making a FollowGrid component
--The FollowGrid component will take a list of users as props, display the avatars of
the users with their names, and link them to each user's own profile.

Lecture 6:
Finding people to follow::
---The Who to follow feature will show the signed-in user a list of people in MERN
Social that they are not currently following, thus giving them the option to follow
them or view their profiles,

---we need to add a backend API that returns the list of users
not followed by the currently signed-in user, and then update the frontend by adding
a component that loads and displays this list of users.

Fetching users not followed:::
---We will implement a new API on the server to query the database and fetch the list of
users the current user is not following.

--we update the api-users file

The FindPeople component::::
--To display the who to follow feature, we will create a component called FindPeople,
which can be added to any of the views or rendered on its own.


----MERN Social users can now follow each other, view lists of followings and followers
for each user, and also see a list of people they can follow. The main purpose of
following another user in MERN Social is to see and interact with their shared posts.